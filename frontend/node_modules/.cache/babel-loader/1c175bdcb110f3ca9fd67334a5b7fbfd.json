{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srishti\\\\Desktop\\\\stuff\\\\college\\\\4th year\\\\EComm\\\\1\\\\ecomm_site\\\\frontend\\\\src\\\\pages\\\\OrdersListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions';\nimport { useHistory } from 'react-router-dom';\nimport { Table, Spinner } from 'react-bootstrap';\nimport { dateCheck } from '../components/GetDate';\nimport { changeDeliveryStatus } from '../actions/productActions';\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants';\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage';\nimport Message from '../components/Message';\nimport { cartList } from './ProductDetailsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrdersListPage() {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const placeholderValue = \"Search orders by book name\";\n  const todays_date = dateCheck(new Date().toISOString().slice(0, 10));\n  const [currentDateInfo] = useState(todays_date);\n  const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0);\n  const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\"); // login reducer\n\n  const userLoginReducer = useSelector(state => state.userLoginReducer);\n  const {\n    userInfo\n  } = userLoginReducer; // get all orders reducer\n\n  const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer);\n  const {\n    orders,\n    loading: loadingOrders\n  } = getAllOrdersReducer; // change delivery status reducer\n\n  const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer);\n  const {\n    success: deliveryStatusChangeSuccess,\n    loading: deliveryStatusChangeSpinner\n  } = changeDeliveryStatusReducer; // check token validation reducer\n\n  const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer);\n  const {\n    error: tokenError\n  } = checkTokenValidationReducer;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      dispatch(checkTokenValidation());\n      dispatch(getAllOrders());\n    }\n  }, [userInfo, dispatch, history]);\n\n  if (userInfo && tokenError === \"Request failed with status code 401\") {\n    alert(\"Session expired, please login again.\");\n    dispatch(logout());\n    history.push(\"/login\");\n    window.location.reload();\n  }\n\n  const changeDeliveryStatusHandler = (id, status) => {\n    setIdOfchangeDeliveryStatus(id);\n    const productData = {\n      \"is_delivered\": status,\n      \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\n    };\n    dispatch(changeDeliveryStatus(id, productData));\n  };\n\n  if (deliveryStatusChangeSuccess) {\n    alert(\"Delivery status changed successfully\");\n    dispatch({\n      type: CHANGE_DELIVERY_STATUS_RESET\n    });\n    dispatch(getAllOrders());\n  }\n\n  const handleSearchTerm = term => {\n    setCloneSearchTerm(term);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loadingOrders && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Getting Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 31\n    }, this), userInfo.admin && /*#__PURE__*/_jsxDEV(SearchBarForOrdersPage, {\n      handleSearchTerm: handleSearchTerm,\n      placeholderValue: placeholderValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 32\n    }, this), orders.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      className: \"mt-2\",\n      striped: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"p-3 bg-info text-white text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"More Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), userInfo.admin && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remove from cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), orders.filter(item => item.name.toLowerCase().includes(cloneSearchTerm) || item.ordered_item.toLowerCase().includes(cloneSearchTerm) || item.address.toLowerCase().includes(cloneSearchTerm)).map((order, idx) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: order.image,\n              className: \"order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.total_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this), userInfo.admin && /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.is_delivered ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-danger btn-sm\",\n              onClick: () => changeDeliveryStatusHandler(order.id, false),\n              children: deliveryStatusChangeSpinner && idOfchangeDeliveryStatus === order.id ? /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 53\n              }, this) : \"Mark as Undelivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-primary btn-sm\",\n              onClick: () => changeDeliveryStatusHandler(order.id, true),\n              children: deliveryStatusChangeSpinner && idOfchangeDeliveryStatus === order.id ? /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 53\n              }, this) : \"Mark as delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"removeFromCart\",\n              children: \"Remove From Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"No orders yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"removeFromCart\",\n      children: \"Total Amount: 7200.98\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrdersListPage, \"s3e3rkUcOHwqCplXMgCok6MloDw=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrdersListPage;\nexport default OrdersListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersListPage\");","map":{"version":3,"sources":["C:/Users/Srishti/Desktop/stuff/college/4th year/EComm/1/ecomm_site/frontend/src/pages/OrdersListPage.js"],"names":["React","useEffect","useState","useDispatch","useSelector","checkTokenValidation","getAllOrders","logout","useHistory","Table","Spinner","dateCheck","changeDeliveryStatus","CHANGE_DELIVERY_STATUS_RESET","SearchBarForOrdersPage","Message","cartList","OrdersListPage","history","dispatch","placeholderValue","todays_date","Date","toISOString","slice","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","userLoginReducer","state","userInfo","getAllOrdersReducer","orders","loading","loadingOrders","changeDeliveryStatusReducer","success","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","checkTokenValidationReducer","error","tokenError","push","alert","window","location","reload","changeDeliveryStatusHandler","id","status","productData","type","handleSearchTerm","term","display","admin","length","filter","item","name","toLowerCase","includes","ordered_item","address","map","order","idx","image","total_price","is_delivered"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table, Spinner } from 'react-bootstrap'\r\nimport { dateCheck } from '../components/GetDate'\r\nimport { changeDeliveryStatus } from '../actions/productActions'\r\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\r\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\r\nimport Message from '../components/Message'\r\nimport {cartList} from './ProductDetailsPage'\r\n\r\nfunction OrdersListPage() {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const placeholderValue = \"Search orders by book name\"\r\n\r\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\r\n\r\n    const [currentDateInfo] = useState(todays_date)\r\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\r\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // get all orders reducer\r\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\r\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\r\n\r\n    // change delivery status reducer\r\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\r\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            dispatch(checkTokenValidation())\r\n            dispatch(getAllOrders())\r\n        }\r\n    }, [userInfo, dispatch, history])\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    const changeDeliveryStatusHandler = (id, status) => {\r\n        setIdOfchangeDeliveryStatus(id)\r\n        const productData = {\r\n            \"is_delivered\": status,\r\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\r\n        }\r\n        dispatch(changeDeliveryStatus(id, productData))\r\n    }\r\n\r\n    if (deliveryStatusChangeSuccess) {\r\n        alert(\"Delivery status changed successfully\")\r\n        dispatch({\r\n            type: CHANGE_DELIVERY_STATUS_RESET\r\n        })\r\n        dispatch(getAllOrders())\r\n    }\r\n\r\n    const handleSearchTerm = (term) => {\r\n        setCloneSearchTerm(term)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loadingOrders && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Orders</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\r\n                {orders.length > 0 ?\r\n                <Table className=\"mt-2\" striped bordered>\r\n                    <thead>\r\n                        <tr className=\"p-3 bg-info text-white text-center\">\r\n                            <th>Order Id</th>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th>More Details</th>\r\n                            {userInfo.admin &&\r\n                                <th>Remove from cart</th>\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n\r\n\r\n                    {orders.filter((item) => (\r\n\r\n                        item.name.toLowerCase().includes(cloneSearchTerm)\r\n                        ||\r\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\r\n                        ||\r\n                        item.address.toLowerCase().includes(cloneSearchTerm)\r\n                    )\r\n\r\n                    ).map((order, idx) => (\r\n                        <tbody key={idx}>\r\n                            <tr className=\"text-center\">\r\n                                <td>\r\n                                    {order.id}\r\n                                </td>\r\n                                <td>\r\n                                <img src = {order.image} className=\"order\"></img></td>\r\n                                <td>{order.name}</td>\r\n                                <td>{order.total_price}</td>\r\n                                {userInfo.admin &&\r\n                                    <td>\r\n                                        {order.is_delivered ?\r\n                                            <button\r\n                                                className=\"btn btn-outline-danger btn-sm\"\r\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\r\n                                            >\r\n                                                {deliveryStatusChangeSpinner\r\n                                                    &&\r\n                                                    idOfchangeDeliveryStatus === order.id\r\n                                                    ?\r\n                                                    <Spinner animation=\"border\" />\r\n                                                    :\r\n                                                    \"Mark as Undelivered\"}\r\n                                            </button>\r\n                                            :\r\n                                            <button\r\n                                                className=\"btn btn-outline-primary btn-sm\"\r\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\r\n                                            >\r\n                                                {deliveryStatusChangeSpinner\r\n                                                    &&\r\n                                                    idOfchangeDeliveryStatus === order.id\r\n                                                    ?\r\n                                                    <Spinner animation=\"border\" />\r\n                                                    :\r\n                                                    \"Mark as delivered\"}\r\n                                            </button>\r\n                                        }\r\n                                    </td>\r\n                                }\r\n                                <td>\r\n                                    <button className=\"removeFromCart\">Remove From Cart</button>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    ))}\r\n                </Table>\r\n                : <Message variant=\"info\">No orders yet.</Message> }\r\n                <button className=\"removeFromCart\">Total Amount: 7200.98</button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default OrdersListPage"]},"metadata":{},"sourceType":"module"}